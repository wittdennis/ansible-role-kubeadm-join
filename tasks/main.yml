---
- name: Set gen_join_token fact to track if a join token must be generated
  ansible.builtin.set_fact:
    gen_join_token: false
  run_once: true
  delegate_to: localhost
  tags:
    - kubeadm_join

- name: Check if node already joined a cluster
  ansible.builtin.stat:
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf
  tags:
    - kubeadm_join

- name: Set gen_join_token when not joined host is found
  ansible.builtin.set_fact:
    gen_join_token: true
  run_once: true
  delegate_to: localhost
  tags:
    - kubeadm_join

- name: Generate join token
  ansible.builtin.command: kubeadm token create --ttl 5m --print-join-command
  register: kubeadm_join_cmd
  delegate_to: "{{ groups['kubernetes_control_plane'][0] }}"
  changed_when: kubeadm_join_cmd.rc == 0
  check_mode: false
  run_once: true
  when: gen_join_token
  tags:
    - kubeadm_join

- name: Retrieve certificates from first control plane
  when: gen_join_token and inventory_hostname == groups["kubernetes_control_plane"][0]
  tags:
    - kubeadm_join
  block:
    - name: Fetch CA cert
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/ca.crt
        dest: /tmp/kubernetes/pki/ca.crt
        flat: true

    - name: Fetch CA private key
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/ca.key
        dest: /tmp/kubernetes/pki/ca.key
        flat: true

    - name: Fetch sa cert
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/sa.pub
        dest: /tmp/kubernetes/pki/sa.pub
        flat: true

    - name: Fetch sa private key
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/sa.key
        dest: /tmp/kubernetes/pki/sa.key
        flat: true

    - name: Fetch front-proxy CA cert
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/front-proxy-ca.crt
        dest: /tmp/kubernetes/pki/front-proxy-ca.crt
        flat: true

    - name: Fetch front-proxy CA private key
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/front-proxy-ca.key
        dest: /tmp/kubernetes/pki/front-proxy-ca.key
        flat: true

    - name: Fetch etcd CA cert
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/etcd/ca.crt
        dest: /tmp/kubernetes/pki/etcd/ca.crt
        flat: true

    - name: Fetch etcd CA private key
      when: not kubeadm_join_external_etcd
      ansible.builtin.fetch:
        src: /etc/kubernetes/pki/etcd/ca.key
        dest: /tmp/kubernetes/pki/etcd/ca.key
        flat: true

- name: Copy certificates to control planes
  when: gen_join_token and inventory_hostname in groups["kubernetes_control_plane"] and not inventory_hostname == groups["kubernetes_control_plane"][0]
  tags:
    - kubeadm_join
  ansible.builtin.copy:
    src: /tmp/kubernetes/
    dest: /etc/kubernetes/
    mode: "0644"
    owner: root
    group: root
    force: true
    directory_mode: "0755"

- name: Cleanup local certificate tmp files
  delegate_to: localhost
  run_once: true
  become: false
  tags:
    - kubeadm_join
  ansible.builtin.file:
    path: /tmp/kubernetes
    state: absent

- name: Run kubeadm join (with defaults)
  ansible.builtin.command: "{{ kubeadm_join_cmd.stdout }}"
  when: not kubelet_conf.stat.exists and kubeadm_join_join_configuration|length == 0
  register: default_join_command
  changed_when: default_join_command.rc == 0
  tags:
    - kubeadm_join

- name: Deploy config file for kubeadm
  ansible.builtin.template:
    src: "kubeadm-config.yaml.j2"
    dest: /tmp/kubeadm-config.yaml
    mode: "0644"
  when: not kubelet_conf.stat.exists and kubeadm_join_join_configuration|length > 0
  tags:
    - kubeadm_join

- name: Split join command
  when: not kubelet_conf.stat.exists and kubeadm_join_join_configuration|length > 0
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo "{{ kubeadm_join_cmd.stdout }}" | cut -d ' ' -f 3
      echo "{{ kubeadm_join_cmd.stdout }}" | cut -d ' ' -f 5
      echo "{{ kubeadm_join_cmd.stdout }}" | cut -d ' ' -f 7
  register: split_join_command
  changed_when: false
  check_mode: false
  tags:
    - kubeadm_join

- name: Update config with join command values
  when: not kubelet_conf.stat.exists and kubeadm_join_join_configuration|length > 0
  register: enrich_join_config
  changed_when: enrich_join_config.rc == 0
  ansible.builtin.command:
    cmd: |
      /usr/local/bin/yq -i '
        .discovery.bootstrapToken.apiServerEndpoint = "{{ split_join_command.stdout_lines[0] }}" |
        .discovery.bootstrapToken.apiServerEndpoint style="double" |
        .discovery.bootstrapToken.token = "{{ split_join_command.stdout_lines[1] }}" |
        .discovery.bootstrapToken.token style="double" |
        .discovery.bootstrapToken.caCertHashes[0] = "{{ split_join_command.stdout_lines[2] }}" |
        .discovery.bootstrapToken.caCertHashes[0] style="double"
      ' /tmp/kubeadm-config.yaml
  tags:
    - kubeadm_join

- name: Run kubeadm join (with custom config)
  ansible.builtin.command: "kubeadm join --config /tmp/kubeadm-config.yaml"
  when: not kubelet_conf.stat.exists and kubeadm_join_join_configuration|length > 0
  register: config_join_command
  changed_when: "'This node has joined the cluster' in config_join_command.stdout"
  tags:
    - kubeadm_join

- name: Delete temp kubeadm config
  ansible.builtin.file:
    path: /tmp/kubeadm-config.yaml
    state: absent
  tags:
    - kubeadm_join
